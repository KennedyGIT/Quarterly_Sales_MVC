// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuarterlySalesApp.Models;

#nullable disable

namespace QuarterlySalesApp.Migrations
{
    [DbContext(typeof(QuarterlyEmployeeSalesDbContext))]
    partial class QuarterlyEmployeeSalesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuarterlySalesApp.Models.DomainModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfHire")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2015, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1985, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2017, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            ManagerId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1988, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2016, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Johnson",
                            ManagerId = 1
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1992, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2018, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            LastName = "Williams",
                            ManagerId = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1983, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2019, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Brown",
                            ManagerId = 1
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1995, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfHire = new DateTime(2020, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sarah",
                            LastName = "Jones",
                            ManagerId = 1
                        });
                });

            modelBuilder.Entity("QuarterlySalesApp.Models.DomainModels.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 15000m,
                            EmployeeId = 1,
                            Quarter = 1,
                            Year = 2024
                        },
                        new
                        {
                            Id = 2,
                            Amount = 18000m,
                            EmployeeId = 2,
                            Quarter = 3,
                            Year = 2024
                        },
                        new
                        {
                            Id = 3,
                            Amount = 20000m,
                            EmployeeId = 3,
                            Quarter = 2,
                            Year = 2024
                        },
                        new
                        {
                            Id = 4,
                            Amount = 16000m,
                            EmployeeId = 4,
                            Quarter = 1,
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            Amount = 22000m,
                            EmployeeId = 5,
                            Quarter = 2,
                            Year = 2024
                        },
                        new
                        {
                            Id = 6,
                            Amount = 19000m,
                            EmployeeId = 6,
                            Quarter = 1,
                            Year = 2024
                        });
                });

            modelBuilder.Entity("QuarterlySalesApp.Models.DomainModels.Employee", b =>
                {
                    b.HasOne("QuarterlySalesApp.Models.DomainModels.Employee", "Manager")
                        .WithMany("Subordinates")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("QuarterlySalesApp.Models.DomainModels.Sale", b =>
                {
                    b.HasOne("QuarterlySalesApp.Models.DomainModels.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QuarterlySalesApp.Models.DomainModels.Employee", b =>
                {
                    b.Navigation("Subordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
